// <auto-generated />
using System;
using Bkl.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bkl.Models.Migrations
{
    [DbContext(typeof(BklDbContext))]
    partial class BklDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_general_ci")
                .HasAnnotation("MySql:CharSet", "utf8")
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bkl.Models.BklAnalysisLog", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("AlarmTimes")
                        .HasColumnType("int(11)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<int>("Day")
                        .HasColumnType("int(11)");

                    b.Property<int>("DayOfMonth")
                        .HasColumnType("int(11)");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int(11)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("HandleTimes")
                        .HasColumnType("int(11)");

                    b.Property<int>("HourOfDay")
                        .HasColumnType("int(11)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Month")
                        .HasColumnType("int(11)");

                    b.Property<long>("OffsetEnd")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("OffsetStart")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("RecordedData")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RecordedPicture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RecordedVideo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("RuleId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Week")
                        .HasColumnType("int(11)");

                    b.Property<int>("Year")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.ToTable("bkl_analysis_log", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklAnalysisRule", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("AttributeId")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Level")
                        .HasMaxLength(10)
                        .HasColumnType("int(11)");

                    b.Property<long>("LinkageActionId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Max")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Min")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("PairId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ProbeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TimeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("bkl_analysis_rule", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklDeviceMetadata", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ConnectionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("DeviceMetadata")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PDeviceName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PDeviceName");

                    b.Property<string>("PDeviceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PDeviceType");

                    b.Property<string>("Path1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Path2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Path3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Path4")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Path5")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Path6")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PathType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProbeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_device_metadata", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklDeviceStatus", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("DeviceRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FacilityRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("StatusValue")
                        .HasColumnType("double");

                    b.Property<long>("Time")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("TimeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_device_status", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklDGAGasProduction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("DeviceRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FacilityRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("GasName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.Property<string>("RateType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaskId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("Time")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_dga_gas_production", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklDGAStatus", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<double>("C2H2")
                        .HasColumnType("double")
                        .HasColumnName("C2H2");

                    b.Property<int>("C2H2_C2H4_Code")
                        .HasColumnType("int(11)")
                        .HasColumnName("C2H2_C2H4_Code");

                    b.Property<double>("C2H2_C2H4_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("C2H2_C2H4_Tatio");

                    b.Property<double>("C2H2_H2_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("C2H2_H2_Tatio");

                    b.Property<double>("C2H2_Inc")
                        .HasColumnType("double")
                        .HasColumnName("C2H2_Inc");

                    b.Property<double>("C2H4")
                        .HasColumnType("double")
                        .HasColumnName("C2H4");

                    b.Property<int>("C2H4_C2H6_Code")
                        .HasColumnType("int(11)")
                        .HasColumnName("C2H4_C2H6_Code");

                    b.Property<double>("C2H4_C2H6_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("C2H4_C2H6_Tatio");

                    b.Property<double>("C2H4_Inc")
                        .HasColumnType("double")
                        .HasColumnName("C2H4_Inc");

                    b.Property<double>("C2H6")
                        .HasColumnType("double")
                        .HasColumnName("C2H6");

                    b.Property<double>("C2H6_CH4_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("C2H6_CH4_Tatio");

                    b.Property<double>("C2H6_Inc")
                        .HasColumnType("double")
                        .HasColumnName("C2H6_Inc");

                    b.Property<double>("CH4")
                        .HasColumnType("double")
                        .HasColumnName("CH4");

                    b.Property<int>("CH4_H2_Code")
                        .HasColumnType("int(11)")
                        .HasColumnName("CH4_H2_Code");

                    b.Property<double>("CH4_H2_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("CH4_H2_Tatio");

                    b.Property<double>("CH4_Inc")
                        .HasColumnType("double")
                        .HasColumnName("CH4_Inc");

                    b.Property<double>("CO")
                        .HasColumnType("double")
                        .HasColumnName("CO");

                    b.Property<double>("CO2")
                        .HasColumnType("double")
                        .HasColumnName("CO2");

                    b.Property<double>("CO2_CO_Inc_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("CO2_CO_Inc_Tatio");

                    b.Property<double>("CO2_CO_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("CO2_CO_Tatio");

                    b.Property<double>("CO2_Inc")
                        .HasColumnType("double")
                        .HasColumnName("CO2_Inc");

                    b.Property<double>("CO_Inc")
                        .HasColumnType("double")
                        .HasColumnName("CO_Inc");

                    b.Property<bool>("Calculated")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("CmbuGas")
                        .HasColumnType("double");

                    b.Property<double>("CmbuGas_Inc")
                        .HasColumnType("double")
                        .HasColumnName("CmbuGas_Inc");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("DataId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("DeviceRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FacilityRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryRelId")
                        .HasColumnType("bigint(20)");

                    b.Property<double>("GasPres")
                        .HasColumnType("double");

                    b.Property<double>("H2")
                        .HasColumnType("double");

                    b.Property<double>("H2_Inc")
                        .HasColumnType("double")
                        .HasColumnName("H2_Inc");

                    b.Property<double>("LeakCur")
                        .HasColumnType("double");

                    b.Property<double>("Mst")
                        .HasColumnType("double");

                    b.Property<double>("N2")
                        .HasColumnType("double");

                    b.Property<double>("N2_Inc")
                        .HasColumnType("double")
                        .HasColumnName("N2_Inc");

                    b.Property<double>("O2")
                        .HasColumnType("double");

                    b.Property<double>("O2_Inc")
                        .HasColumnType("double")
                        .HasColumnName("O2_Inc");

                    b.Property<double>("O2_N2_Inc_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("O2_N2_Inc_Tatio");

                    b.Property<double>("O2_N2_Tatio")
                        .HasColumnType("double")
                        .HasColumnName("O2_N2_Tatio");

                    b.Property<double>("OilTmp")
                        .HasColumnType("double");

                    b.Property<string>("ThreeTatio_Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ThreeTatio_Code");

                    b.Property<long>("Time")
                        .HasColumnType("bigint(20)");

                    b.Property<double>("TotHyd")
                        .HasColumnType("double");

                    b.Property<double>("TotHyd_Inc")
                        .HasColumnType("double")
                        .HasColumnName("TotHyd_Inc");

                    b.HasKey("Id");

                    b.ToTable("bkl_dga_status", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklFactory", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Distribute")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DistributeCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("bkl_factory", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklFactoryFacility", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FacilityType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GPSLocation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GPSLocation");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("bkl_factory_facility", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklFactoryUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Positions")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_factory_user", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklInspectionTask", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TotalNumber")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Updatetime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("bkl_inspection_task", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklInspectionTaskDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<int>("Error")
                        .HasColumnType("int(11)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImageHeight")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ImageWidth")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LocalImagePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RemoteImagePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<long>("TaskId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_inspection_task_detail", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklInspectionTaskResult", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<string>("DamageDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DamageHeight")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("DamageLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DamagePosition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DamageSize")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DamageWidth")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("DamageX")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("DamageY")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TaskDetailId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("TaskId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("TreatmentSuggestion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("bkl_inspection_task_result", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklLinkageAction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("AttributeId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ConnectionUuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("LinkageActionId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int(11)");

                    b.Property<long>("PairId")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Sleep")
                        .HasColumnType("int(11)");

                    b.Property<string>("ValueCN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ValueCN");

                    b.Property<string>("ValueHexString")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WriteStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WriteStatusNameCN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("WriteStatusNameCN");

                    b.Property<int>("WriteType")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.ToTable("bkl_linkage_action", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklNotificationContact", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_notification_contact", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklPermission", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Control")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_permission", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklThermalCamera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Port")
                        .HasColumnType("int(11)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_thermal_camera", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.BklUserGranted", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint(20)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("FacilityId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("FactoryId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("bkl_user_granted", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.ModbusConnInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ConnStr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConnType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ModbusType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("modbus_conn_info", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.ModbusDevicePair", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<byte>("BusId")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("ConnUuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ConnectionId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("NodeId")
                        .HasColumnType("bigint(20)");

                    b.Property<short>("NodeIndex")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("ProtocolName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("modbus_device_pair", (string)null);
                });

            modelBuilder.Entity("Bkl.Models.ModbusNodeInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("DataOrder")
                        .HasColumnType("int(11)");

                    b.Property<byte>("DataSize")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<int>("DataType")
                        .HasColumnType("int(11)");

                    b.Property<byte>("NodeCount")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("ProtocolName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ReadType")
                        .HasColumnType("int(11)");

                    b.Property<string>("Scale")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<short>("StartAddress")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("StatusNameCN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("StatusNameCN");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("UnitCN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("UnitCN");

                    b.Property<string>("ValueMap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("modbus_node_info", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
